AWSTemplateFormatVersion: "2010-09-09"
Description: >
  "Template for Load Balancer and Autoscaling Groups"

Parameters:
  MyVpcId:
    Description: "VPC ID"
    Type: String

  KeyName:
    Description: "Key Pair for EC2"
    Type: String

  ImageId:
    Description: "AMI Image ID"
    Type: String
    Default: "ami-090717c950a5c34d3"
  
  PublicSubnets:
    Description: "Public Subnets"
    Type: String
  
  PrivateSubnets:
    Description: "Private Subnets"
    Type: String
  
  SGmysql:
    Description: "Security group mysql server"
    Type: List<String>

  SGalb:
    Description: "Security group ALB"
    Type: String

  SGwebserver:
    Description: "Security group webserver"
    Type: List<String>
  
  ASGMax:
    Description: "Max size for ASG"
    Type: String
    Default: 2

  ASGMin:
    Description: "Min size for ASG"
    Type: String
    Default: 1

  ASGDesired:
    Description: "Desired size for ASG"
    Type: String
    Default: 1

Resources:
  MyTgALB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: "instance"
      Name: "MY-TGALB"
      Protocol: "HTTP"
      Port: 80
      VpcId: !Ref MyVpcId
      HealthCheckPath: "HTTP1"
      HealthCheckProtocol: "HTTP"
      HealthCheckPath: "/"

  MyTgNLB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: "instance"
      Name: "MY-TGNLB"
      Protocol: "TCP"
      Port: 3306
      VpcId: !Ref MyVpcId
      HealthCheckProtocol: "TCP"
  
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: "application"
      Name: "MyALB"
      Scheme: "internet-facing"
      IpAddressType: "ipv4"
      Subnets: !Split [",",!Ref PublicSubnets]
      SecurityGroups:
        - !Ref SGalb
      Tags:
        - Key: "Name"
          Value: !Sub "MyALB-${AWS::StackName}"
  
  MyALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 80
      Protocol: "HTTP"
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref MyTgALB
      LoadBalancerArn: !Ref MyALB

  MyNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: "network"
      Name: "MyNLB"
      Scheme: "internal"
      IpAddressType: "ipv4"
      Subnets: !Split [",",!Ref PrivateSubnets]
      Tags:
        - Key: "Name"
          Value: !Sub "MyNLB-${AWS::StackName}"
  
  MyNLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 3306
      Protocol: "TCP"
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref  MyTgNLB
      LoadBalancerArn: !Ref MyNLB

  MyLaunchconfigweb:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: "MyEC2launchconfig"
      ImageId: !Ref ImageId
      InstanceType: "t2.micro"
      KeyName: !Ref KeyName
      SecurityGroups: !Ref SGwebserver
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo apt update && upgrade
            sudo apt install -y apache2
            sudo systemctl restart apache2
            sudo apt install -y php libapache2-mod-php php-mysql
            sudo apt install -y php-curl php-gd php-xml php-mbstring  php-xmlrpc php-zip php-soap php-intl
            sudo rm /var/www/html/index.html
            cd ~
            sudo curl -O https://wordpress.org/latest.tar.gz
            sudo tar xzvf latest.tar.gz
            sudo cp -R wordpress/* /var/www/html/
            sudo chmod -R 777 /var/www/html/
            sudo chown -R www-data:www-data /var/www/html/
            sudo systemctl restart apache2
            sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
            sudo sed -i "s/database_name_here/WordPressDB/g" /var/www/html/wp-config.php
            sudo sed -i "s/username_here/WordPressUser/g" /var/www/html/wp-config.php
            sudo sed -i "s/password_here/welcome123/g" /var/www/html/wp-config.php
            sudo sed -i "s/localhost/${MyNLB.DNSName}/g" /var/www/html/wp-config.php
            cd /
            echo "<html><head><title>Health Check</title></head><body><h1>Healthy</h1></body></html>" >> health.html
            sudo chmod +x health.html
            sudo systemctl restart apache2
    DependsOn: MyNLB
  MyAutoscalingGroupweb:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "AutoscaleGroupweb-${AWS::StackName}"
      MaxSize: !Ref ASGMax
      MinSize: !Ref ASGMin
      DesiredCapacity: !Ref ASGDesired
      TargetGroupARNs:
        - !Ref MyTgALB
      LaunchConfigurationName: !Ref MyLaunchconfigweb
      VPCZoneIdentifier: !Split [",",!Ref PrivateSubnets]
    DependsOn: MyLaunchconfigsql
#----------------------------------------------------------------------------------------------------------------------#
  MyLaunchconfigsql:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: "MySQLlaunchconfig"
      ImageId: !Ref ImageId
      InstanceType: "t2.micro"
      KeyName: !Ref KeyName
      SecurityGroups: !Ref SGmysql
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo apt update && upgrade
            sudo apt install -y mysql-server
            sudo apt install -y php libapache2-mod-php php-mysql
            sudo apt install -y php-curl php-gd php-xml php-mbstring  php-xmlrpc php-zip php-soap php-intl
            sudo ufw -y enable
            sudo ufw allow mysql
            sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Password';"
            sudo mysql -h localhost -u root -pPassword -e "FLUSH PRIVILEGES;"
            sudo mysql -u root -pPassword -e "CREATE DATABASE WordPressDB DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;GRANT ALL ON WordPressDB.* TO ' WordPressUser '@'localhost' IDENTIFIED BY 'welcome123';"
            sudo mysql -h localhost -u root -pPassword -e "FLUSH PRIVILEGES;"
            sudo mysql -u root -pPassword -e "GRANT ALL ON WordPressDB.* to 'WordPressUser'@'%' IDENTIFIED BY 'welcome123';FLUSH PRIVILEGES;"
            sudo sudo sed -i "s/127.0.0.1/0.0.0.0/g" /etc/mysql/mysql.conf.d/mysqld.cnf
            sudo systemctl restart mysql.service 
  MyAutoscalingGroupsql:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "AutoscaleGroupsql-${AWS::StackName}"
      MaxSize: !Ref ASGMax
      MinSize: !Ref ASGMin
      DesiredCapacity: !Ref ASGDesired
      TargetGroupARNs:
        - !Ref MyTgNLB
      LaunchConfigurationName: !Ref MyLaunchconfigsql
      VPCZoneIdentifier: !Split [",",!Ref PrivateSubnets]


Outputs:
  ALBDns:
    Description: "URL to ALB"
    Value: !Sub "http://${MyALB.DNSName}"
  NLBDns:
    Description: "URL to NLB"
    Value: !Sub "http://${MyNLB.DNSName}"